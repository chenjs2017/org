#+SEQ_TODO: NEXT(n) TODO(t) WAITING(w) PROJ(p) | DONE(d) CANCELLED(c)
* SimplePress
** docker
*** You can run Postgres this way (map a port):
docker run --name simplepress -e POSTGRES_PASSWORD=Chenjs123! -d -p 5432:5432 postgres


*** connect 
psql -h 127.0.0.1 -p 5432 -U postgres
** connet to AWS
bash
ssh -i ~/keys/aws-linux-jschen.pem ec2-user@ec2-34-227-189-116.compute-1.amazonaws.com

scp -i ~\keys\aws-linux-jschen.pem c:\Users\JackChen\source\repos\SimplePress\simplepressdb.tar ec2-user@ec2-34-227-189-116.compute-1.amazonaws.com:~
http://34.227.189.116
** Postgres SQL
*** remote connect postgresql
**** Add or edit the following line in your postgresql.conf :
listen_addresses = '*'
**** Add the following line as the first line of pg_hba.conf. It allows access to all databases for all users with an encrypted password:
#TYPE DATABASE USER CIDR-ADDRESS  METHOD
host  all  all 0.0.0.0/0 md5

*** backup database
go to C:\Users\JackChen\source\repos\SimplCommerce\src\SimplCommerce.WebHost\bin\Debug\netcoreapp2.1\publish
"C:\Program Files\PostgreSQL\10\bin\pg_dump.exe" -h localhost -U postgres db > file.sql
git commit
git push

*** restore database
psql -U postgres
drop database db;
create database db;
\q #exit psql
psql -U postgres < file.sql

** start stop
screen 

* Card King
mysql, installed on bash, 
> sudo apt-get install mysql-server
>  /usr/bin/mysql -u root -pjingshun

* chrome

As I am a user of vimium, it turns out I had the capabilities already shipped with it even though I wasn't aware that it existed.

Search the starting point by: /yourSeach
Press enter.
Enable visual mode via: v, and visual mode on a line basis via Shift + V
Select text by vim navigation keys, aka: h, j, k, l, b, e, w, $ (I especially like shift + w, as it goes to the end of the next word)
Yank via y
You now can switch the context and paste the text via Ctrl+V

There also seems to be a caret mode, yet as of yet I somtimes don't see the current place of the cursor, which is why I prefer the search-first approach as of now.
* Mac
** Multi Desktop
Ctrl + <left> / <right> swith desktop
Ctrl + <up> / <down> open/close mission control
Hold maximum window key, choose left or right screen

* Window
  Win - <left>, Win - <Right> - <Up> <Down>
* c shar
** common tipes
*** async
**** TASK.RUN VS ASYNC AWAIT
	http://www.hexacta.com/2016/06/01/task-run-vs-async-await/
**** Async/Await - Best Practices in Asynchronous Programming
	 https://msdn.microsoft.com/en-us/magazine/jj991977.aspx
*** WebClient vs HttpClient vs HttpWebRequest
	http://www.diogonunes.com/blog/webclient-vs-httpclient-vs-httpwebrequest/

*** Assembly and Type
public void PrintAssemblyAndTypes(string asmPath)
{
    var assembly = Assembly.LoadFile(asmPath);
    string[] props = assembly.GetName().FullName.Split(",=".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);

    var type = typeof(IPlugin);
    var pluginArr = assembly.GetTypes().Where(p => type.IsAssignableFrom(p ));
    foreach(var plugin in pluginArr)
    {
        Console.WriteLine(plugin.Name);
    }
}
* Emacs
** common tips:
*** rectangle select c+x , then press SPC
*** cut, past copy
**** Cut the text c-w
**** copy the text M-w
**** past the text c-y
*** Input TAB	C-q <TAB>
	
*** to delete a line
**** ctrl + shift + backspace
**** ctrl-a, ctrl-k, ctrl-k
*** Kill buffer: C+x, K
*** Reload init.el: M+X, load_file
*** External link
**** create or edit a link C-c C-l
**** open a link C-c C-o

*** turn off welcome screen
(setq inhibit-startup-message t)
(setq inhibit-splash-screen t)

** org
*** linewrapping in org: M-X toggle-truncate-lines
***  Headlines - Outline mode
**** Tab: 	Local visibility cycling
**** Shift-Tab: Global Visibility Cycling
**** m-<right>:	Increase level
**** m-<left>:	Decrease leve
**** m-<up>:	Move up with in a level
**** Alt-<down>:Move down within a level
**** C-c ,c-w:	Cut a headline
**** C-c, C-c: Active the setting line
***  Schedule, deadline & agenda view
**** add a schedule, ctrl-c ctrl-s
**** add a deadline, ctrl-c ctrl-d
**** switch to agenda view M-x, org-agenda
**** show events scheduled, org-agenda-file-to-front, C-c [
**** Move forward, F
**** Move backword, B
	
** emacs with git
*** install through melpa, M-x package-install RET magit RET
*** Getting started with Magit
**** M-x magit-status
**** s to stage file
**** c c to commit(type the message then C-c C-c to actually commit)
**** b b to switch
**** P u git push
**** F u to do a git pull
